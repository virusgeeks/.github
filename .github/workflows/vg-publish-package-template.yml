name: publish package to npm registry
on: 
  workflow_call:
    secrets:
      VG_NODE_TOKEN:  #created by default in workflow
        required: true

jobs:
  build_and_test:
    name: Build and test job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo '::set-output name=dir::$(yarn cache dir)'

      - uses: actions/cache@v2
        name: validate cache
        id: yarn-cache
        with:
          path: | 
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Installing yarn dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Lint
        run: yarn lint

      #- run: npm i
      
      # - run: yarn pack --filename testpkg.tgz
      - run: yarn build
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
            name: package
            path: build/*
      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
            name: packagejson
            path: "package.json"

  
  publish:
    name: "Publish to GitHub Packages"
    needs: [build_and_test]
    runs-on: ubuntu-18.04
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
          name: package
    - name: Download artifacts package
      uses: actions/download-artifact@v2
      with:
          name: packagejson
    - uses: actions/setup-node@v1
      with:
        node-version: 14.x
        registry-url: https://npm.pkg.github.com/
        scope: "@virusgeeks"
     #create .npmrc on the fly   -- requires name in package.json to follow @virusgeeks/name
    - run: echo "registry=https://npm.pkg.github.com/@virusgeeks" >> .npmrc
    - run: yarn version --prerelease --preid=ci-$GITHUB_RUN_ID --no-git-tag-version
    - run: npm publish $(ls *.tgz)
      env:
        NODE_AUTH_TOKEN: ${{secrets.VG_NODE_TOKEN}}
            